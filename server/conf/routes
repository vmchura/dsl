# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET        /                                    controllers.Application.index
# SINGIN / LOGIN
GET        /signin                              controllers.SignInController.view
GET        /authenticate/:provider              controllers.SocialAuthController.authenticate(provider: String)
GET        /welcome                             controllers.Application.welcomeAuthenticated
# SIGNOUT
GET        /signout                             controllers.Application.signOut

# ADMIN
GET         /tournament/create                  controllers.TournamentController.view
POST        /tournament/create                  controllers.TournamentController.post
POST        /participant/update                 controllers.ParticipantController.buildRelation()

# TOURNAMENT
GET         /tournament/showparticipantscorrelation/:tournamentID       controllers.TournamentController.showparticipantscorrelation(tournamentID: Long)
GET         /tournament/showmatches/:challongeTournamentID              controllers.TournamentController.showMatchesToUploadReplay(challongeTournamentID: Long)
GET         /tournament/showmatchessimple/:challongeTournamentID              controllers.TournamentController.showMatches(challongeTournamentID: Long)
# STATICS
GET         /statics/tournament                    controllers.StaticsController.view
# REPLAY
POST        /replay/add/:tournamentID/:matchID/:discordUser1/:discordUser2  controllers.ReplayMatchController.addReplayToMatch(tournamentID: Long, matchID: Long,discordUser1: String, discordUser2: String)
POST        /replay/parse/:discordUser1/:discordUser2                       controllers.ReplayMatchController.parseReplay(discordUser1: String, discordUser2: String)
GET         /replay/download/:replayID/:replayName  controllers.ReplayMatchController.downloadReplay(replayID: java.util.UUID,replayName: String)
GET         /replay/delete/:replayID/  controllers.ReplayMatchController.deleteReplay(replayID: java.util.UUID)
GET         /replay/order/:tournamentID/:matchID                            controllers.OrderReplaysController.view(tournamentID: Long, matchID: Long)
POST        /replay/order/:tournamentID/:matchID                            controllers.OrderReplaysController.submit(tournamentID: Long, matchID: Long)
# Prefix must match `play.assets.urlPrefix`
GET        /assets/*file                        controllers.Assets.at(file)
GET        /versionedAssets/*file               controllers.Assets.versioned(path="/public", file: Asset)
# SMURFS
GET         /smurfs/view                        controllers.SmurfController.view
GET         /smurfs/accept/:discordUserID/:matchID                        controllers.SmurfController.accept(discordUserID: String, matchID: java.util.UUID)
GET         /smurfs/decline/:discordUserID/:matchID                       controllers.SmurfController.decline(discordUserID: String, matchID: java.util.UUID)
GET         /smurfs/list                                                  controllers.SmurfController.showListSmurfsDefined()

GET     /javascriptRoutes                       controllers.JavaScriptRouter.javascriptRoutes
